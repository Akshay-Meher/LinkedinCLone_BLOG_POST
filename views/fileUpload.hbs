<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container mt-5">
        <h2 class="text-center">Large File Upload with Progress Bar</h2>
        <form id="uploadForm" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="fileInput" class="form-label">Choose file:</label>
                <input class="form-control" type="file" id="fileInput" name="file1">
            </div>
            <div class="progress">
                <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0"
                    aria-valuemin="0" aria-valuemax="100">0%</div>
            </div>
            <button type="submit" class="btn btn-primary mt-3">Upload</button>
        </form>

        <div id="downloadSection" class="mt-5" style="display:none;">
            <h3>Download File</h3>
            <a id="downloadLink" class="btn btn-success">Download</a>
        </div>
    </div>

    <script>
        const uploadForm = document.getElementById("uploadForm");
        const fileInput = document.getElementById("fileInput");
        const progressBar = document.getElementById("progressBar");
        const downloadSection = document.getElementById("downloadSection");
        const downloadLink = document.getElementById("downloadLink");

        uploadForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            const file = fileInput.files[0];
            const chunkSize = 1024 * 1024; // 1MB chunks
            const totalChunks = Math.ceil(file.size / chunkSize);
            const fileId = Date.now().toString();  // Unique file identifier

            for (let i = 0; i < totalChunks; i++) {
                const chunk = file.slice(i * chunkSize, (i + 1) * chunkSize);
                const formData = new FormData();
                formData.append("fileChunk", chunk);
                formData.append("fileId", fileId);
                formData.append("chunkIndex", i);
                formData.append("totalChunks", totalChunks);

                const response = await fetch("/upload", {
                    method: "POST",
                    body: formData,
                });

                const progress = Math.floor(((i + 1) / totalChunks) * 100);
                progressBar.style.width = progress + "%";
                progressBar.innerHTML = progress + "%";
            }

            progressBar.classList.add("bg-success");
            downloadSection.style.display = "block";
            downloadLink.href = `/download/${fileId}`;
        });
    </script>
</body>

</html>