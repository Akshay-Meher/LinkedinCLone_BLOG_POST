<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chunked File Upload</title>
    <!-- Bootstrap CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container mt-5">
        <h2>Upload Large File in Chunks</h2>
        <form id="uploadForm" method="post" action="/upload/chunk" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="userId" class="form-label">User ID</label>
                <input type="text" class="form-control" id="userId" name="userId" required>
            </div>
            <div class="mb-3">
                <label for="file" class="form-label">Choose file</label>
                <input type="file" class="form-control" id="file" name="file" required>
            </div>
            <button type="submit" class="btn btn-primary" onclick="uploadFile()">Upload</button>

        </form>

        <div class="progress mt-3">
            <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0"
                aria-valuemin="0" aria-valuemax="100">0%</div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function uploadFile() {
            const userId = document.getElementById('userId').value;
            const fileInput = document.getElementById('file');
            const file = fileInput.files[0];
            const chunkSize = 5 * 1024 * 1024; // 1MB per chunk
            const totalChunks = Math.ceil(file.size / chunkSize);

            console.log('file', file);
            console.log('chunkSize', chunkSize);
            console.log('totalChunks', totalChunks);

            for (let chunkIndex = 0; chunkIndex < totalChunks; chunkIndex++) {
                const start = chunkIndex * chunkSize;
                const end = Math.min(start + chunkSize, file.size);
                const fileChunk = file.slice(start, end);

                console.log('start', start);

                const formData = new FormData();
                formData.append('file', fileChunk);
                formData.append('userId', userId);
                formData.append('chunkIndex', chunkIndex);
                formData.append('totalChunks', totalChunks);
                formData.append('filename', file.name);
                const data = {
                    file: fileChunk,
                    userId: userId,
                    chunkIndex: chunkIndex,
                    totalChunks: totalChunks,
                    filename: file.name
                }

                console.log('formData', formData);
                console.log('formData', data);

                // Upload each chunk
                await fetch('/upload/chunk', {
                    method: 'POST',
                    body: data
                });

                // Update progress bar
                const percentComplete = ((chunkIndex + 1) / totalChunks) * 100;
                const progressBar = document.getElementById('progressBar');
                progressBar.style.width = percentComplete + '%';
                progressBar.setAttribute('aria-valuenow', percentComplete);
                progressBar.textContent = Math.round(percentComplete) + '%';
            }

            console.log('File uploaded successfully!');
        }
    </script>
</body>

</html>